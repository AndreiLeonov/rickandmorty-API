{"version":3,"sources":["styles/PersonCard.module.css","styles/PersonInfoCard.module.css","styles/Persons.module.css","styles/Navbar.module.css","components/PersonCard.jsx","components/Persons.jsx","components/PersonInfoCard.jsx","components/PersonDetailedInfo.jsx","components/Navbar.jsx","AppRouter.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PersonCard","props","data","id","className","style","textDecoration","to","src","image","overlay","name","Persons","React","useState","persons","setPersons","currentPage","setCurrentPage","fetching","setFetching","useEffect","axios","get","then","res","results","prevState","finally","document","addEventListener","scrollHandler","removeEventListener","e","target","documentElement","scrollHeight","scrollTop","window","innerHeight","map","item","PersonInfoCard","history","useHistory","PersonInfo","status","gender","location","onClick","push","PersonDetailedInfo","useParams","personInfo","setPersonInfo","Navbar","Nav","AppRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8833976.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PersonCard\":\"PersonCard_PersonCard__1lB68\",\"overlay\":\"PersonCard_overlay__DY1NK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PersonInfoCard\":\"PersonInfoCard_PersonInfoCard__1VcuM\",\"PersonInfo\":\"PersonInfoCard_PersonInfo__21SWp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Persons\":\"Persons_Persons__3rD0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Navbar_Nav__3BQFA\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"../styles/PersonCard.module.css\";\r\n\r\nconst PersonCard = (props) => {\r\n  const data = props.data;\r\n  const id = props.data.id;\r\n\r\n  return (\r\n    <div className={style.PersonCard}>\r\n      <Link style={{ textDecoration: 'none' }} to={`/characters/${id}`}>\r\n        <img src={data.image} />\r\n        <div className={style.overlay}>\r\n          <h4>{data.name}</h4>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonCard;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport PersonCard from './PersonCard';\r\nimport style from \"../styles/Persons.module.css\";\r\n\r\nconst Persons = () => {\r\n\r\n  const [persons, setPersons] = React.useState([]);\r\n  \r\n  //settings for scroll\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [fetching, setFetching] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (fetching) {\r\n      axios\r\n        .get(`https://rickandmortyapi.com/api/character/?page=${currentPage}`)\r\n        .then((res) => {\r\n          setPersons([...persons, ...res.data.results]);\r\n          setCurrentPage((prevState) => prevState + 1);\r\n        })\r\n        .finally(() => setFetching(false));\r\n    }\r\n  }, [fetching]);\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener(\"scroll\", scrollHandler);\r\n\r\n    return function () {\r\n      document.removeEventListener(\"scroll\", scrollHandler);\r\n    };\r\n  }, []);\r\n\r\n  const scrollHandler = (e) => {\r\n    if ( e.target.documentElement.scrollHeight - (e.target.documentElement.scrollTop + window.innerHeight) < 100) {\r\n      setFetching(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.Persons}>\r\n        {persons.map(item => (\r\n          <PersonCard key={item.id} data={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport style from \"../styles/PersonInfoCard.module.css\";\r\n\r\nconst PersonInfoCard = (props) => {\r\n  const data = props.data;\r\n  const history = useHistory();\r\n  const backHandler = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className={style.PersonInfoCard}>\r\n      <div>\r\n        <img src={data.image} />\r\n      </div>\r\n      <div className={style.PersonInfo}>\r\n        <div>name: {data.name}</div>\r\n        <div>status: {data.status}</div>\r\n        <div>gender: {data.gender}</div>\r\n        <div>location: {data.location.name}</div>\r\n        <button onClick={backHandler}>Back to persons list</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonInfoCard;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport PersonInfoCard from './PersonInfoCard'\r\n\r\nconst PersonDetailedInfo = () => {\r\n  const { id } = useParams();\r\n\r\n  const [personInfo, setPersonInfo] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    axios.get(`https://rickandmortyapi.com/api/character/${id}`).then((res) => {\r\n      setPersonInfo([res.data]);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {personInfo.map((item) => (\r\n          <PersonInfoCard key={item.id} data={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonDetailedInfo;\r\n","import React from 'react';\r\nimport style from '../styles/Navbar.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n\r\n    return (\r\n        <div className={style.Nav}>\r\n            <Link to={`/characters/`}>\r\n                <img src={\"https://upload.wikimedia.org/wikipedia/en/c/c8/Rick_and_Morty_logo.png\"} />\r\n            </Link>\r\n            {/* <Link style={{ textDecoration: 'none', color: '#fff' }} to={`/characters/`}>[All Persons]</Link>\r\n            <Link style={{ textDecoration: 'none', color: '#fff' }} to={`/characters/`}>[Episodes]</Link> */}\r\n        </div>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Persons from './components/Persons';\r\nimport PersonDetailedInfo from './components/PersonDetailedInfo';\r\nimport { Navbar } from './components/Navbar';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Navbar/>\r\n                <div>\r\n                    <Switch>\r\n                        <Route exact path=\"/characters\" component={Persons} />\r\n                        <Route exact path=\"/characters/:id\" component={PersonDetailedInfo} />\r\n                        <Redirect to=\"/characters\"/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppRouter;","import \"./App.css\";\nimport AppRouter from './AppRouter';\n\nfunction App() {\n  return (\n    <>\n      <AppRouter />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}